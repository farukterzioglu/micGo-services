// Code generated by protoc-gen-go. DO NOT EDIT.
// source: review_service.proto

package reviewservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Review struct {
	Text                 string   `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	Star                 int32    `protobuf:"varint,2,opt,name=Star,proto3" json:"Star,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Review) Reset()         { *m = Review{} }
func (m *Review) String() string { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()    {}
func (*Review) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{0}
}

func (m *Review) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Review.Unmarshal(m, b)
}
func (m *Review) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Review.Marshal(b, m, deterministic)
}
func (m *Review) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Review.Merge(m, src)
}
func (m *Review) XXX_Size() int {
	return xxx_messageInfo_Review.Size(m)
}
func (m *Review) XXX_DiscardUnknown() {
	xxx_messageInfo_Review.DiscardUnknown(m)
}

var xxx_messageInfo_Review proto.InternalMessageInfo

func (m *Review) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Review) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

type NewReviewRequest struct {
	Review               *Review  `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewReviewRequest) Reset()         { *m = NewReviewRequest{} }
func (m *NewReviewRequest) String() string { return proto.CompactTextString(m) }
func (*NewReviewRequest) ProtoMessage()    {}
func (*NewReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{1}
}

func (m *NewReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewReviewRequest.Unmarshal(m, b)
}
func (m *NewReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewReviewRequest.Marshal(b, m, deterministic)
}
func (m *NewReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewReviewRequest.Merge(m, src)
}
func (m *NewReviewRequest) XXX_Size() int {
	return xxx_messageInfo_NewReviewRequest.Size(m)
}
func (m *NewReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewReviewRequest proto.InternalMessageInfo

func (m *NewReviewRequest) GetReview() *Review {
	if m != nil {
		return m.Review
	}
	return nil
}

type ReviewId struct {
	ReviewId             string   `protobuf:"bytes,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewId) Reset()         { *m = ReviewId{} }
func (m *ReviewId) String() string { return proto.CompactTextString(m) }
func (*ReviewId) ProtoMessage()    {}
func (*ReviewId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{2}
}

func (m *ReviewId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewId.Unmarshal(m, b)
}
func (m *ReviewId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewId.Marshal(b, m, deterministic)
}
func (m *ReviewId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewId.Merge(m, src)
}
func (m *ReviewId) XXX_Size() int {
	return xxx_messageInfo_ReviewId.Size(m)
}
func (m *ReviewId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewId.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewId proto.InternalMessageInfo

func (m *ReviewId) GetReviewId() string {
	if m != nil {
		return m.ReviewId
	}
	return ""
}

type GetTopReviewsRequest struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopReviewsRequest) Reset()         { *m = GetTopReviewsRequest{} }
func (m *GetTopReviewsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopReviewsRequest) ProtoMessage()    {}
func (*GetTopReviewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{3}
}

func (m *GetTopReviewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopReviewsRequest.Unmarshal(m, b)
}
func (m *GetTopReviewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopReviewsRequest.Marshal(b, m, deterministic)
}
func (m *GetTopReviewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopReviewsRequest.Merge(m, src)
}
func (m *GetTopReviewsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopReviewsRequest.Size(m)
}
func (m *GetTopReviewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopReviewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopReviewsRequest proto.InternalMessageInfo

func (m *GetTopReviewsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RateReviewRequest struct {
	ReviewId             int32    `protobuf:"varint,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	Star                 int32    `protobuf:"varint,2,opt,name=star,proto3" json:"star,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateReviewRequest) Reset()         { *m = RateReviewRequest{} }
func (m *RateReviewRequest) String() string { return proto.CompactTextString(m) }
func (*RateReviewRequest) ProtoMessage()    {}
func (*RateReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{4}
}

func (m *RateReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateReviewRequest.Unmarshal(m, b)
}
func (m *RateReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateReviewRequest.Marshal(b, m, deterministic)
}
func (m *RateReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateReviewRequest.Merge(m, src)
}
func (m *RateReviewRequest) XXX_Size() int {
	return xxx_messageInfo_RateReviewRequest.Size(m)
}
func (m *RateReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RateReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RateReviewRequest proto.InternalMessageInfo

func (m *RateReviewRequest) GetReviewId() int32 {
	if m != nil {
		return m.ReviewId
	}
	return 0
}

func (m *RateReviewRequest) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02e8736aac43c55, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Review)(nil), "reviewservice.Review")
	proto.RegisterType((*NewReviewRequest)(nil), "reviewservice.NewReviewRequest")
	proto.RegisterType((*ReviewId)(nil), "reviewservice.ReviewId")
	proto.RegisterType((*GetTopReviewsRequest)(nil), "reviewservice.GetTopReviewsRequest")
	proto.RegisterType((*RateReviewRequest)(nil), "reviewservice.RateReviewRequest")
	proto.RegisterType((*Empty)(nil), "reviewservice.Empty")
}

func init() { proto.RegisterFile("review_service.proto", fileDescriptor_e02e8736aac43c55) }

var fileDescriptor_e02e8736aac43c55 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0x65, 0x1b, 0xc1, 0x3a, 0x0d, 0x89, 0x4e, 0x30, 0x36, 0x5c, 0x24, 0x6b, 0x62, 0x38, 0x28,
	0x21, 0xf5, 0x17, 0x18, 0xe3, 0x47, 0x0f, 0x6a, 0xb2, 0xf4, 0x6e, 0xb0, 0x9d, 0x43, 0x0f, 0x0a,
	0xc2, 0x96, 0xea, 0xcf, 0xf3, 0x9f, 0x19, 0x76, 0x57, 0x91, 0x0d, 0xb7, 0xde, 0xde, 0xbe, 0xbc,
	0x79, 0x33, 0xef, 0x01, 0x04, 0x15, 0x35, 0x6b, 0xda, 0xbe, 0xd4, 0x54, 0x35, 0xeb, 0x25, 0x25,
	0x65, 0x55, 0xc8, 0x02, 0x7d, 0xcd, 0x1a, 0x92, 0xa7, 0xe0, 0x09, 0x45, 0x20, 0xc2, 0xde, 0x82,
	0x3e, 0xe5, 0x94, 0x45, 0x2c, 0x3e, 0x10, 0x0a, 0xb7, 0x5c, 0x26, 0xf3, 0x6a, 0x3a, 0x8a, 0x58,
	0xec, 0x0a, 0x85, 0xf9, 0x35, 0x1c, 0x3e, 0xd1, 0x56, 0x0f, 0x09, 0xfa, 0xd8, 0x50, 0x2d, 0xf1,
	0x12, 0x3c, 0x6d, 0xab, 0xa6, 0x27, 0xb3, 0xe3, 0xa4, 0xb7, 0x25, 0x31, 0x6a, 0x23, 0xe2, 0xe7,
	0x30, 0xd6, 0xcc, 0x7c, 0x85, 0x21, 0x8c, 0x2b, 0x83, 0xcd, 0xea, 0xbf, 0x37, 0xbf, 0x80, 0xe0,
	0x9e, 0xe4, 0xa2, 0x28, 0xb5, 0xba, 0xfe, 0x5d, 0x17, 0x80, 0xbb, 0x2c, 0x36, 0xef, 0xfa, 0x56,
	0x57, 0xe8, 0x07, 0xbf, 0x81, 0x23, 0x91, 0x4b, 0xea, 0x5f, 0x66, 0xdb, 0xbb, 0x9d, 0x7d, 0x9b,
	0xae, 0xfe, 0x97, 0xae, 0xc5, 0x7c, 0x1f, 0xdc, 0xdb, 0xb7, 0x52, 0x7e, 0xcd, 0xbe, 0x47, 0xe0,
	0x6b, 0xab, 0x4c, 0x87, 0xc0, 0x07, 0x80, 0x2c, 0x6f, 0x8c, 0x3f, 0x9e, 0x5a, 0x11, 0xed, 0x4e,
	0xc2, 0x93, 0xc1, 0x0e, 0xe6, 0x2b, 0xee, 0xe0, 0x23, 0x4c, 0x3a, 0xa7, 0x7a, 0x17, 0xab, 0x98,
	0xa5, 0x0c, 0x9f, 0xc1, 0xef, 0xd5, 0x84, 0x67, 0x96, 0x7e, 0xa8, 0xc4, 0x70, 0xf8, 0x1b, 0x71,
	0x27, 0x65, 0x78, 0x07, 0xd0, 0x35, 0x89, 0x91, 0x2d, 0xb4, 0x4b, 0x0e, 0x03, 0x4b, 0xa1, 0x1a,
	0xe4, 0xce, 0xab, 0xa7, 0x7e, 0xb9, 0xab, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x92, 0x40,
	0xa5, 0x8a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReviewServiceClient is the client API for ReviewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReviewServiceClient interface {
	SaveReview(ctx context.Context, in *NewReviewRequest, opts ...grpc.CallOption) (*ReviewId, error)
	SaveReviews(ctx context.Context, opts ...grpc.CallOption) (ReviewService_SaveReviewsClient, error)
	GetTopReviews(ctx context.Context, in *GetTopReviewsRequest, opts ...grpc.CallOption) (ReviewService_GetTopReviewsClient, error)
	RateReview(ctx context.Context, in *RateReviewRequest, opts ...grpc.CallOption) (*Empty, error)
}

type reviewServiceClient struct {
	cc *grpc.ClientConn
}

func NewReviewServiceClient(cc *grpc.ClientConn) ReviewServiceClient {
	return &reviewServiceClient{cc}
}

func (c *reviewServiceClient) SaveReview(ctx context.Context, in *NewReviewRequest, opts ...grpc.CallOption) (*ReviewId, error) {
	out := new(ReviewId)
	err := c.cc.Invoke(ctx, "/reviewservice.ReviewService/SaveReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) SaveReviews(ctx context.Context, opts ...grpc.CallOption) (ReviewService_SaveReviewsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReviewService_serviceDesc.Streams[0], "/reviewservice.ReviewService/SaveReviews", opts...)
	if err != nil {
		return nil, err
	}
	x := &reviewServiceSaveReviewsClient{stream}
	return x, nil
}

type ReviewService_SaveReviewsClient interface {
	Send(*NewReviewRequest) error
	Recv() (*ReviewId, error)
	grpc.ClientStream
}

type reviewServiceSaveReviewsClient struct {
	grpc.ClientStream
}

func (x *reviewServiceSaveReviewsClient) Send(m *NewReviewRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reviewServiceSaveReviewsClient) Recv() (*ReviewId, error) {
	m := new(ReviewId)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reviewServiceClient) GetTopReviews(ctx context.Context, in *GetTopReviewsRequest, opts ...grpc.CallOption) (ReviewService_GetTopReviewsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReviewService_serviceDesc.Streams[1], "/reviewservice.ReviewService/GetTopReviews", opts...)
	if err != nil {
		return nil, err
	}
	x := &reviewServiceGetTopReviewsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReviewService_GetTopReviewsClient interface {
	Recv() (*Review, error)
	grpc.ClientStream
}

type reviewServiceGetTopReviewsClient struct {
	grpc.ClientStream
}

func (x *reviewServiceGetTopReviewsClient) Recv() (*Review, error) {
	m := new(Review)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reviewServiceClient) RateReview(ctx context.Context, in *RateReviewRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/reviewservice.ReviewService/RateReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReviewServiceServer is the server API for ReviewService service.
type ReviewServiceServer interface {
	SaveReview(context.Context, *NewReviewRequest) (*ReviewId, error)
	SaveReviews(ReviewService_SaveReviewsServer) error
	GetTopReviews(*GetTopReviewsRequest, ReviewService_GetTopReviewsServer) error
	RateReview(context.Context, *RateReviewRequest) (*Empty, error)
}

func RegisterReviewServiceServer(s *grpc.Server, srv ReviewServiceServer) {
	s.RegisterService(&_ReviewService_serviceDesc, srv)
}

func _ReviewService_SaveReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).SaveReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reviewservice.ReviewService/SaveReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).SaveReview(ctx, req.(*NewReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_SaveReviews_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReviewServiceServer).SaveReviews(&reviewServiceSaveReviewsServer{stream})
}

type ReviewService_SaveReviewsServer interface {
	Send(*ReviewId) error
	Recv() (*NewReviewRequest, error)
	grpc.ServerStream
}

type reviewServiceSaveReviewsServer struct {
	grpc.ServerStream
}

func (x *reviewServiceSaveReviewsServer) Send(m *ReviewId) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reviewServiceSaveReviewsServer) Recv() (*NewReviewRequest, error) {
	m := new(NewReviewRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ReviewService_GetTopReviews_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTopReviewsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReviewServiceServer).GetTopReviews(m, &reviewServiceGetTopReviewsServer{stream})
}

type ReviewService_GetTopReviewsServer interface {
	Send(*Review) error
	grpc.ServerStream
}

type reviewServiceGetTopReviewsServer struct {
	grpc.ServerStream
}

func (x *reviewServiceGetTopReviewsServer) Send(m *Review) error {
	return x.ServerStream.SendMsg(m)
}

func _ReviewService_RateReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RateReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).RateReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reviewservice.ReviewService/RateReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).RateReview(ctx, req.(*RateReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReviewService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reviewservice.ReviewService",
	HandlerType: (*ReviewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveReview",
			Handler:    _ReviewService_SaveReview_Handler,
		},
		{
			MethodName: "RateReview",
			Handler:    _ReviewService_RateReview_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveReviews",
			Handler:       _ReviewService_SaveReviews_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetTopReviews",
			Handler:       _ReviewService_GetTopReviews_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "review_service.proto",
}
