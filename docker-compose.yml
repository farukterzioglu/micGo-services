version: "3"

services:
  zookeeper:
    image: zookeeper:3.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: ches/kafka
    container_name: kafka
    ports:
      - "7203:7203"
      - "9092:9092"
    networks:
      - kafka-net
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=3000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=3100000
      - ZOOKEEPER_IP=zookeeper
      - KAFKA_ADVERTISED_HOST_NAME=kafka
    depends_on:
      - "zookeeper"

  topiccreation:
    image: ches/kafka
    networks:
      - kafka-net
    depends_on:
      - "kafka"
    environment:
      - ZOOKEEPER_IP=zookeeper
    command: >
      # TODO : wait for kafka to be ready
      sh -c "kafka-topics.sh --create --topic create-review --replication-factor 1 --partitions 1 --zookeeper $$ZOOKEEPER_IP:2181 &&
             kafka-topics.sh --create --topic rate-review --replication-factor 1 --partitions 1 --zookeeper $$ZOOKEEPER_IP:2181"

  rpcserver:
    build:
      context: .
      dockerfile: ./build/Review.CommandRpcServer/Dockerfile
    image: command-rpcserver
    container_name: command-rpcserver
    command: -port=10000
    ports:
      - "10000:10000"
    networks:
      - back-tier

  commandengine:
    build:
      context: .
      dockerfile: ./build/Review.CommandEngine/Dockerfile
    image: command-engine
    container_name: command-engine
    command: ./wait-for-it.sh rpcserver:10000 ./app -kafka_brokers=kafka:9092 -server_addr=rpcserver:10000
    networks:
      - back-tier
      - kafka-net
    depends_on:
      - "topiccreation"
      - "rpcserver"

  web:
    build:
      context: .
      dockerfile: ./build/Review.API/Dockerfile
    ports:
      - "80:8000"
    depends_on:
      - "topiccreation"
    command: ["./wait-for-it.sh", "kafka:9092"]

networks:
  kafka-net:
  back-tier:
